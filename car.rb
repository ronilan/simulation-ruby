require 'hashable'

# Class representing a car
class Car
  include Hashable # module mixin from gem

  attr_reader :x

  @@counter = 0 # class variable

  def initialize(type)
    @@counter += 1

    @type = type # set at initialization
    @serial = @@counter # incremented with each new object instance
    @plate = register # generated by private method
    @x = -50
  end

  def load(driver, passengers)
    @max_passengers ||= 4
    @driver = driver
    @passengers = passengers[0..@max_passengers - 1]
  end

  def go(speed)
    @speed = speed
  end

  def slower
    @speed -= 1 if @speed > 0
  end

  def faster
    @speed_limit ||= 60
    @speed += 1 if @speed < @speed_limit
  end

  def break
    @speed /= 2
  end

  def drive
    @x += @speed.to_i / 10
  end

  private def register
    ('a'..'z').to_a.sample(6).join.upcase
  end
end

# Class representing a Truck.
# @extends Car
class Truck < Car
  def initialize
    super('truck')
    @speed_limit = 55
    @max_passengers = 2
  end
end

# Class representing a Sedan Car.
# @extends Car
class Sedan < Car
  def initialize
    super('sedan')
    @speed_limit = 75
    @max_passengers = 4
  end
end

# Class representing a SUV.
# @extends Car
class SUV < Car
  def initialize
    super('suv')
    @speed_limit = 70
    @max_passengers = 6
  end
end

# Class representing a Sports car.
# @extends Car
class Sport < Car
  def initialize
    super('sport')
    @speed_limit = 80
    @max_passengers = 1
  end
end
